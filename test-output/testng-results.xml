<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="2" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-24T07:50:09 IST" name="Suite" finished-at="2025-06-24T07:50:25 IST" duration-ms="16379">
    <groups>
      <group name="purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" name="submitOrder" class="com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest"/>
        <method signature="SubmitOrderTest.verifyOrder(java.util.HashMap)[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" name="verifyOrder" class="com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest"/>
      </group> <!-- purchase -->
      <group name="error">
        <method signature="ErrorValidationTest.errorValidation()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" name="errorValidation" class="com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest"/>
      </group> <!-- error -->
    </groups>
    <test started-at="2025-06-24T07:50:09 IST" name="Error Validations" finished-at="2025-06-24T07:50:20 IST" duration-ms="10632">
      <class name="com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" started-at="2025-06-24T07:50:09 IST" name="launchApplication" finished-at="2025-06-24T07:50:17 IST" duration-ms="7834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="errorValidation()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" started-at="2025-06-24T07:50:17 IST" name="errorValidation" finished-at="2025-06-24T07:50:17 IST" duration-ms="275" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest.errorValidation(ErrorValidationTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorValidation -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" started-at="2025-06-24T07:50:17 IST" name="closeBrowser" finished-at="2025-06-24T07:50:17 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" started-at="2025-06-24T07:50:17 IST" name="launchApplication" finished-at="2025-06-24T07:50:19 IST" duration-ms="1661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="errorValidation()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" started-at="2025-06-24T07:50:19 IST" name="errorValidation" finished-at="2025-06-24T07:50:19 IST" duration-ms="293" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest.errorValidation(ErrorValidationTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorValidation -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest@13f95696]" started-at="2025-06-24T07:50:19 IST" name="closeBrowser" finished-at="2025-06-24T07:50:20 IST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.nikhil.testing.seleniumTestingFresh.ErrorValidationTest -->
    </test> <!-- Error Validations -->
    <test started-at="2025-06-24T07:50:09 IST" name="Submit Order" finished-at="2025-06-24T07:50:25 IST" duration-ms="16379">
      <class name="com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:09 IST" name="launchApplication" finished-at="2025-06-24T07:50:18 IST" duration-ms="8517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:18 IST" name="submitOrder" data-provider="getData" finished-at="2025-06-24T07:50:20 IST" duration-ms="2392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Test@123, expectedResult=true, email=test2130@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:20 IST" name="closeBrowser" finished-at="2025-06-24T07:50:20 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:20 IST" name="launchApplication" finished-at="2025-06-24T07:50:21 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:21 IST" name="submitOrder" data-provider="getData" finished-at="2025-06-24T07:50:21 IST" duration-ms="127" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Test, expectedResult=false, email=test@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping verification for user with failed login for Email : test@gmail.com]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping verification for user with failed login for Email : test@gmail.com
at com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest.submitOrder(SubmitOrderTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:21 IST" name="closeBrowser" finished-at="2025-06-24T07:50:21 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:21 IST" name="launchApplication" finished-at="2025-06-24T07:50:22 IST" duration-ms="934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="verifyOrder(java.util.HashMap)[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:22 IST" name="verifyOrder" data-provider="getData" finished-at="2025-06-24T07:50:23 IST" depends-on-methods="com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest.submitOrder" duration-ms="1119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Test@123, expectedResult=true, email=test2130@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:23 IST" name="closeBrowser" finished-at="2025-06-24T07:50:23 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:23 IST" name="launchApplication" finished-at="2025-06-24T07:50:25 IST" duration-ms="1622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="verifyOrder(java.util.HashMap)[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:25 IST" name="verifyOrder" data-provider="getData" finished-at="2025-06-24T07:50:25 IST" depends-on-methods="com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest.submitOrder" duration-ms="88" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Test, expectedResult=false, email=test@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping verification for user with failed login for Email : test@gmail.com]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping verification for user with failed login for Email : test@gmail.com
at com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest.verifyOrder(SubmitOrderTest.java:58)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest@3549bca9]" started-at="2025-06-24T07:50:25 IST" name="closeBrowser" finished-at="2025-06-24T07:50:25 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.nikhil.testing.seleniumTestingFresh.SubmitOrderTest -->
    </test> <!-- Submit Order -->
  </suite> <!-- Suite -->
</testng-results>
